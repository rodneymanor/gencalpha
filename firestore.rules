 rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* ─────────────────────────────────────────────┐
       NEW – Onboarding wizard settings per user
       ───────────────────────────────────────────── */
    match /onboarding/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    /* ─────────────────────────
       Users basic profile doc
       ───────────────────────── */
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    /* User profiles (separate collection) */
    match /user_profiles/{profileId} {
      allow read:  if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == resource.data.uid;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
    }

    /* Coach–creator relationships */
    match /coach_creator_relationships/{relationshipId} {
      allow read, write: if request.auth != null;
    }

    /* Collections owned by the user */
    match /collections/{collectionId} {
      // live rules allowed any signed-in user; this keeps stricter ownership
      allow read, write: if request.auth != null
                         && request.auth.uid == resource.data.userId;
      allow create:      if request.auth != null
                         && request.auth.uid == request.resource.data.userId;
    }

    /* Videos owned by the user */
    match /videos/{videoId} {
      allow read, write: if request.auth != null
                         && request.auth.uid == resource.data.userId;
      allow create:      if request.auth != null
                         && request.auth.uid == request.resource.data.userId;
    }

    /* Scripts (already owner-restricted in live rules) */
    match /scripts/{scriptId} {
      allow read, write: if request.auth != null
                         && request.auth.uid == resource.data.userId;
      allow create:      if request.auth != null
                         && request.auth.uid == request.resource.data.userId;
    }

    /* Notes (owner only) */
    match /notes/{noteId} {
      allow read, write: if request.auth != null
                         && request.auth.uid == resource.data.userId;
      allow create:      if request.auth != null
                         && request.auth.uid == request.resource.data.userId;
    }

    /* Voices (owner only) */
    match /voices/{voiceId} {
      allow read, write: if request.auth != null
                         && request.auth.uid == resource.data.userId;
      allow create:      if request.auth != null
                         && request.auth.uid == request.resource.data.userId;
    }

    /* ───────────────────────────────────────────────────────────────
       Creator Management Collections
       ─────────────────────────────────────────────────────────────── */
    
    /* Creators - Allow authenticated users to read/write creator profiles */
    match /creators/{creatorId} {
      allow read:   if request.auth != null;
      allow write:  if request.auth != null;
      allow create: if request.auth != null;
    }
    
    /* Creator Follow Relationships - Users can manage their own follows */
    match /creator_follows/{followId} {
      allow read:   if request.auth != null;
      allow write:  if request.auth != null 
                    && (request.auth.uid == resource.data.userId || 
                        request.auth.uid == request.resource.data.userId);
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.userId;
    }
    
    /* Creator Videos - Allow authenticated users to read/write creator videos */
    match /creator_videos/{videoId} {
      allow read:   if request.auth != null;
      allow write:  if request.auth != null;
      allow create: if request.auth != null;
    }

    /* ────────────────
       Catch-all deny
       ──────────────── */
    match /{document=**} {
      allow read, write: if false;
    }
  }
}